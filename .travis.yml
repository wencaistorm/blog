# language: node_js  # 构建的环境是 Node.js
# node_js: stable  # 版本是当前稳定版本
# # assign build branches
# branches:
# only:  # WebHook 钩子只检测 blog-source 分支的 push 变动
# – hexo
# # cache this directory
# cache:
# directories:  # 把node_modules 文件夹放入缓存，这样可以大大节约每次构建的时间（2min -> 30s）
# – node_modules
# # S: Build Lifecycle
# before_install:
# – openssl aes-256-cbc -K $encrypted_2230b7a2bdc5_key -iv $encrypted_2230b7a2bdc5_iv -in ./.travis/id_rsa.enc -out ~/.ssh/id_rsa -d
# – chmod 600 ~/.ssh/id_rsa
# – eval $(ssh-agent)
# – ssh-add ~/.ssh/id_rsa
# – cp .travis/ssh_config ~/.ssh/config
# – npm install -g hexo-cli # 安装 hexo
# – git clone https://github.com/wencaistorm/next-m.git themes/next  # 安装主题
# install:
# – npm install # 安装 package.json 中的插件
# script:
# - hexo clean
# - hexo g
# after_success:
# – git config –global user.name "wencaistorm"
# – git config –global user.email "1052642137@qq.com"

# – hexo deploy
# # E: Build LifeCycle


language: node_js
node_js: stable

before_install:
    - npm install -g hexo

install:
    - npm install

before_script:
    - git config --global user.name 'wencaistorm'
    - git config --global user.email '1052642137@qq.com'

script:
    - hexo generate

after_success:
    - hexo d
    # - mkdir .deploy
    # - cd .deploy
    # - git init
    # - git remote add origin $DEPLOY_REPO
    # - cp -r ../public/* .
    # - git add -A .
    # - git commit -m 'Site updated'
    # - git push --force --quiet origin master
